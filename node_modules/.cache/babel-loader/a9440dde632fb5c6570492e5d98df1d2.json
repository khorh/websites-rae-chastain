{"ast":null,"code":"var _jsxFileName = \"/Users/helenkhor/Documents/02 Projects/Rae Chastain/src/components/Text/Text.tsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Text = _ref => {\n  let {\n    type,\n    content,\n    ...props\n  } = _ref;\n\n  switch (type) {\n    case \"h1\":\n      return /*#__PURE__*/_jsxDEV(\"h1\", { ...props,\n        children: content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 16\n      }, this);\n\n    case \"h2\":\n      return /*#__PURE__*/_jsxDEV(\"h1\", { ...props,\n        children: content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 16\n      }, this);\n\n    case \"h1\":\n      return /*#__PURE__*/_jsxDEV(\"h1\", { ...props,\n        children: content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 16\n      }, this);\n\n    case \"h1\":\n      return /*#__PURE__*/_jsxDEV(\"h1\", { ...props,\n        children: content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 16\n      }, this);\n\n    case \"h1\":\n      return /*#__PURE__*/_jsxDEV(\"h1\", { ...props,\n        children: content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 16\n      }, this);\n  }\n\n  const textSelection = () => {\n    if (type = \"h1\") {\n      /*#__PURE__*/\n      _jsxDEV(\"h1\", { ...props,\n        children: content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }, this);\n    } else if (type = \"h2\") {\n      /*#__PURE__*/\n      _jsxDEV(\"h2\", { ...props,\n        children: content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }, this);\n    } else if (type = \"h3\") {\n      /*#__PURE__*/\n      _jsxDEV(\"h3\", { ...props,\n        children: content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this);\n    } else if (type = \"h4\") {\n      /*#__PURE__*/\n      _jsxDEV(\"h4\", { ...props,\n        children: content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this);\n    } else {\n      /*#__PURE__*/\n      _jsxDEV(\"p\", { ...props,\n        children: content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: textSelection\n  }, void 0, false);\n};\n_c = Text;\n\nvar _c;\n\n$RefreshReg$(_c, \"Text\");","map":{"version":3,"sources":["/Users/helenkhor/Documents/02 Projects/Rae Chastain/src/components/Text/Text.tsx"],"names":["Text","type","content","props","textSelection"],"mappings":";;;AAWA,OAAO,MAAMA,IAAI,GAAG,QAIH;AAAA,MAJI;AACjBC,IAAAA,IADiB;AAEjBC,IAAAA,OAFiB;AAGjB,OAAGC;AAHc,GAIJ;;AACb,UAAQF,IAAR;AACI,SAAK,IAAL;AACA,0BAAO,mBAAQE,KAAR;AAAA,kBAAgBD;AAAhB;AAAA;AAAA;AAAA;AAAA,cAAP;;AACA,SAAK,IAAL;AACA,0BAAO,mBAAQC,KAAR;AAAA,kBAAgBD;AAAhB;AAAA;AAAA;AAAA;AAAA,cAAP;;AACA,SAAK,IAAL;AACA,0BAAO,mBAAQC,KAAR;AAAA,kBAAgBD;AAAhB;AAAA;AAAA;AAAA;AAAA,cAAP;;AACA,SAAK,IAAL;AACA,0BAAO,mBAAQC,KAAR;AAAA,kBAAgBD;AAAhB;AAAA;AAAA;AAAA;AAAA,cAAP;;AACA,SAAK,IAAL;AACA,0BAAO,mBAAQC,KAAR;AAAA,kBAAgBD;AAAhB;AAAA;AAAA;AAAA;AAAA,cAAP;AAVJ;;AAaA,QAAME,aAAa,GAAG,MAAM;AACxB,QAAIH,IAAI,GAAG,IAAX,EAAiB;AACb;AAAA,yBAAQE,KAAR;AAAA,kBAAgBD;AAAhB;AAAA;AAAA;AAAA;AAAA;AACH,KAFD,MAEO,IAAID,IAAI,GAAG,IAAX,EAAiB;AACpB;AAAA,yBAAQE,KAAR;AAAA,kBAAgBD;AAAhB;AAAA;AAAA;AAAA;AAAA;AACH,KAFM,MAEA,IAAID,IAAI,GAAG,IAAX,EAAiB;AACpB;AAAA,yBAAQE,KAAR;AAAA,kBAAgBD;AAAhB;AAAA;AAAA;AAAA;AAAA;AACH,KAFM,MAEA,IAAID,IAAI,GAAG,IAAX,EAAiB;AACpB;AAAA,yBAAQE,KAAR;AAAA,kBAAgBD;AAAhB;AAAA;AAAA;AAAA;AAAA;AACH,KAFM,MAEA;AACH;AAAA,wBAAOC,KAAP;AAAA,kBAAeD;AAAf;AAAA;AAAA;AAAA;AAAA;AACH;AACJ,GAZD;;AAaA,sBACI;AAAA,cACKE;AADL,mBADJ;AAKH,CApCM;KAAMJ,I","sourcesContent":["interface TextProps {\n    /**\n    * What is the type of text?\n    */\n    type?: \"h1\" | \"h2\" | \"h3\" | \"h4\" | \"p\";\n    /**\n     * What is the content?\n     */\n    content?: string;\n}\n\nexport const Text = ({\n    type,\n    content,\n    ...props\n}: TextProps) => {\n    switch (type) {\n        case \"h1\": \n        return <h1 {...props}>{content}</h1>;\n        case \"h2\": \n        return <h1 {...props}>{content}</h1>;\n        case \"h1\": \n        return <h1 {...props}>{content}</h1>;\n        case \"h1\": \n        return <h1 {...props}>{content}</h1>;\n        case \"h1\": \n        return <h1 {...props}>{content}</h1>;\n    }\n    \n    const textSelection = () => {\n        if (type = \"h1\") {\n            <h1 {...props}>{content}</h1>\n        } else if (type = \"h2\") {\n            <h2 {...props}>{content}</h2>\n        } else if (type = \"h3\") {\n            <h3 {...props}>{content}</h3>\n        } else if (type = \"h4\") {\n            <h4 {...props}>{content}</h4>\n        } else {\n            <p {...props}>{content}</p>\n        }\n    };\n    return (\n        <>\n            {textSelection}\n        </>\n    );\n};\n"]},"metadata":{},"sourceType":"module"}