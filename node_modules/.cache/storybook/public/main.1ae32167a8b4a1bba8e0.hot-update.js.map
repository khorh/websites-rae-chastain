{"version":3,"file":"main.1ae32167a8b4a1bba8e0.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;AAWA;AAIA;AAHA;AACA;AACA;AAHA;;AAKA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAVA;;AAaA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;;AACA;AACA;AAAA;AAIA;AApCA","sources":["webpack://rae-chastain/./src/components/Text/Text.tsx"],"sourcesContent":["interface TextProps {\n    /**\n    * What is the type of text?\n    */\n    type?: \"h1\" | \"h2\" | \"h3\" | \"h4\" | \"p\";\n    /**\n     * What is the content?\n     */\n    content?: string;\n}\n\nexport const Text = ({\n    type,\n    content,\n    ...props\n}: TextProps) => {\n    switch (type) {\n        case \"h1\": \n        return <h1 {...props}>{content}</h1>;\n        case \"h2\": \n        return <h2 {...props}>{content}</h2>;\n        case \"h3\": \n        return <h3 {...props}>{content}</h3>;\n        case \"h1\": \n        return <h1 {...props}>{content}</h1>;\n        case \"h1\": \n        return <h1 {...props}>{content}</h1>;\n    }\n    \n    const textSelection = () => {\n        if (type = \"h1\") {\n            <h1 {...props}>{content}</h1>\n        } else if (type = \"h2\") {\n            <h2 {...props}>{content}</h2>\n        } else if (type = \"h3\") {\n            <h3 {...props}>{content}</h3>\n        } else if (type = \"h4\") {\n            <h4 {...props}>{content}</h4>\n        } else {\n            <p {...props}>{content}</p>\n        }\n    };\n    return (\n        <>\n            {textSelection}\n        </>\n    );\n};\n"],"names":[],"sourceRoot":""}