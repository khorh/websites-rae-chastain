"use strict";
globalThis["webpackHotUpdaterae_chastain"]("main",{

/***/ "./src/components/Text/Paragraph/Paragraph.stories.tsx":
/*!*************************************************************!*\
  !*** ./src/components/Text/Paragraph/Paragraph.stories.tsx ***!
  \*************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Paragraphs": () => (/* binding */ Paragraphs),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _Paragraph__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Paragraph */ "./src/components/Text/Paragraph/Paragraph.tsx");
/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react/jsx-dev-runtime */ "./node_modules/react/jsx-dev-runtime.js");
/* provided dependency */ var __react_refresh_utils__ = __webpack_require__(/*! ./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js */ "./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js");
/* provided dependency */ var __react_refresh_error_overlay__ = __webpack_require__(/*! ./node_modules/@pmmmwh/react-refresh-webpack-plugin/overlay/index.js */ "./node_modules/@pmmmwh/react-refresh-webpack-plugin/overlay/index.js");
__webpack_require__.$Refresh$.runtime = __webpack_require__(/*! ./node_modules/react-refresh/runtime.js */ "./node_modules/react-refresh/runtime.js");

var _jsxFileName = "/Users/helenkhor/Documents/02 Projects/Rae Chastain/src/components/Text/Paragraph/Paragraph.stories.tsx";

/* eslint-disable */
// @ts-nocheck
// @ts-ignore
var __STORY__ = "import { ComponentMeta, ComponentStory } from \"@storybook/react\";\nimport Paragraph, { ParagraphProps } from \"./Paragraph\";\n\nexport default {\n  title: \"Components/Text\",\n  component: Paragraph,\n} as ComponentMeta<typeof Paragraph>;\n\nexport const Paragraphs: ComponentStory<typeof Paragraph> = (\n  args: ParagraphProps\n) => {\n  return (\n    <>\n      <Paragraph size=\"medium\" weight={400}>\n        Paragraph: Medium 400\n      </Paragraph>\n      <Paragraph size=\"medium\" weight={500}>\n        Paragraph: Medium 500\n      </Paragraph>\n      <Paragraph size=\"large\" weight={400}>\n        Paragraph: Large 400\n      </Paragraph>\n      <Paragraph size=\"large\" weight={500}>\n        Paragraph: Large 500\n      </Paragraph>\n    </>\n  );\n};\n"; // @ts-ignore

var __LOCATIONS_MAP__ = {
  "Paragraphs": {
    "startLoc": {
      "col": 60,
      "line": 9
    },
    "endLoc": {
      "col": 1,
      "line": 28
    },
    "startBody": {
      "col": 60,
      "line": 9
    },
    "endBody": {
      "col": 1,
      "line": 28
    }
  }
};



/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  title: "Components/Text",
  component: _Paragraph__WEBPACK_IMPORTED_MODULE_0__["default"]
});
const Paragraphs = args => {
  return /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.Fragment, {
    children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(_Paragraph__WEBPACK_IMPORTED_MODULE_0__["default"], {
      size: "medium",
      weight: 400,
      children: "Paragraph: Medium 400"
    }, void 0, false, {
      fileName: _jsxFileName,
      lineNumber: 22,
      columnNumber: 7
    }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(_Paragraph__WEBPACK_IMPORTED_MODULE_0__["default"], {
      size: "medium",
      weight: 500,
      children: "Paragraph: Medium 500"
    }, void 0, false, {
      fileName: _jsxFileName,
      lineNumber: 25,
      columnNumber: 7
    }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(_Paragraph__WEBPACK_IMPORTED_MODULE_0__["default"], {
      size: "large",
      weight: 400,
      children: "Paragraph: Large 400"
    }, void 0, false, {
      fileName: _jsxFileName,
      lineNumber: 28,
      columnNumber: 7
    }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(_Paragraph__WEBPACK_IMPORTED_MODULE_0__["default"], {
      size: "large",
      weight: 500,
      children: "Paragraph: Large 500"
    }, void 0, false, {
      fileName: _jsxFileName,
      lineNumber: 31,
      columnNumber: 7
    }, undefined)]
  }, void 0, true);
};
_c = Paragraphs;
Paragraphs.parameters = {
  storySource: {
    source: "(\n  args: ParagraphProps\n) => {\n  return (\n    <>\n      <Paragraph size=\"medium\" weight={400}>\n        Paragraph: Medium 400\n      </Paragraph>\n      <Paragraph size=\"medium\" weight={500}>\n        Paragraph: Medium 500\n      </Paragraph>\n      <Paragraph size=\"large\" weight={400}>\n        Paragraph: Large 400\n      </Paragraph>\n      <Paragraph size=\"large\" weight={500}>\n        Paragraph: Large 500\n      </Paragraph>\n    </>\n  );\n}"
  },
  ...Paragraphs.parameters
};

var _c;

__webpack_require__.$Refresh$.register(_c, "Paragraphs");

const $ReactRefreshModuleId$ = __webpack_require__.$Refresh$.moduleId;
const $ReactRefreshCurrentExports$ = __react_refresh_utils__.getModuleExports(
	$ReactRefreshModuleId$
);

function $ReactRefreshModuleRuntime$(exports) {
	if (true) {
		let errorOverlay;
		if (typeof __react_refresh_error_overlay__ !== 'undefined') {
			errorOverlay = __react_refresh_error_overlay__;
		}
		let testMode;
		if (typeof __react_refresh_test__ !== 'undefined') {
			testMode = __react_refresh_test__;
		}
		return __react_refresh_utils__.executeRuntime(
			exports,
			$ReactRefreshModuleId$,
			module.hot,
			errorOverlay,
			testMode
		);
	}
}

if (typeof Promise !== 'undefined' && $ReactRefreshCurrentExports$ instanceof Promise) {
	$ReactRefreshCurrentExports$.then($ReactRefreshModuleRuntime$);
} else {
	$ReactRefreshModuleRuntime$($ReactRefreshCurrentExports$);
}

/***/ })

});
//# sourceMappingURL=main.27a3d096ebd15ae771fb.hot-update.js.map